name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info

  push:
    paths-ignore:
      - '.github/**'
      - 'api/**'
      - 'etl/**'
      - 'prefect/**'
      - 'terraform/**'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.prefectignore'
      - '.pre-commit-config.yaml'
      - 'pyproject.toml'
      - 'README.md'
    branches:
      - "main"
        
env:
  GAR_LOCATION: us-central1
  VERSION_NUMBER: '3.1.0'
  CLOUD_BUCKET: ${{ secrets.CLOUD_BUCKET }}
  CLOUD_SQL_INSTANCE: ${{ secrets.CLOUD_SQL_INSTANCE }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  EMAIL: ${{ secrets.EMAIL }}
  NAME: ${{ secrets.NAME }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGISTRY_REPO: ${{ secrets.REGISTRY_REPO }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
  WIF_SERVICE_ACCOUNT_ARTIFACT_REGISTRY: ${{ secrets.WIF_SERVICE_ACCOUNT_ARTIFACT_REGISTRY }}
  
jobs:

  build-streamlit-image:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Prepare Docker Build Context
        run: |
          mkdir docker-context
          mkdir docker-context/.streamlit
          cp ./.dockerignore docker-context
          cp ./Dockerfile docker-context
          cp ./streamlit_app.py docker-context
          cp ./requirements.txt docker-context
          cp -r ./.streamlit/config.toml docker-context/.streamlit
        
      - name: Build and Export
        uses: docker/build-push-action@v4
        with:
          context: ./docker-context
          tags: streamlit:${{ env.VERSION_NUMBER }}
          outputs: type=docker,dest=/tmp/streamlit.tar
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: streamlit
          path: /tmp/streamlit.tar


  push-docker-hub:
    runs-on: ubuntu-latest
    needs: [build-streamlit-image]
    if: |
      always() &&
      (needs.build-streamlit-image.result == 'success')
    steps:
  
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: streamlit
        path: /tmp
        
    - name: Load Image
      run: |
        docker load --input /tmp/streamlit.tar
        docker image ls -a

    - name: Tag Image
      run: |
        docker tag \
        streamlit:${{ env.VERSION_NUMBER }} \
        ${{ env.DOCKERHUB_USERNAME }}/premier-league:latest

    - name: Push Image
      run: |
        docker push \
        ${{ env.DOCKERHUB_USERNAME }}/premier-league:latest
        
      

   
